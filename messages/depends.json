{
  "description": "Prints a greeting and your org id(s)!",
  "resultformatFlagDescription": "the result format of the graph output. If dot is chosen, org will be shown as dependency image in .dot file format. If xml is chosen, a package.xml for the org will be created and outputted to the console. To put that package.xml in a specific file, use packageoutputdirectory; ignore with --json",
  "metadatacomponentnameFlagDescription": "filter by component in the format '<entityType>.<entityName>; e.g. CustomField.Thumbnail",
  "querycriteriaFlagDescription": "the criteria to filter the dependency records; e.g. RefMetadataComponentName='Thumbnail'",
  "includeListDescription": "the list of fields to include when querying. Separate fields by commas. Adding a colon allows you to specify the name of specific custom object to include e.g 'CustomField:Thumbnail, CustomObject'",
  "excludeListDescription": "list of fields to exclude when querying. Adding a colon allows you to specify the name of specific custom object to exclude e.g 'CustomField:Thumbnail, CustomObject'",
  "generatePackageDescription": "Whether or not you want to generate a package, the input is the output folder",
  "getIncludeDependencies": "For all objects in the include list, get all dependencies, including dependencies for dependencies",
  "getIncludeDependents":"For all objects in the include list, get all components that depend on that component, directly or indirectly",
  "excludePackageDescription": "Does not include any of the objects listed in an attached package.xml into the generated package.xml",
  "example1": "$ sfdx andyinthelcloud:depends --metadatacomponentname CustomField.Thumbnail"
}
